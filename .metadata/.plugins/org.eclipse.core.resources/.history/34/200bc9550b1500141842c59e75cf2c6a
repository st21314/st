package com.itheima;

import java.io.*;

/**
 * 编写程序，将指定目录下所有.java文件拷贝到另一个目的中，并将扩展名改为.txt
 * 
 * @author one
 * 
 */

public class Test9 {
	public static void main(String[] args) {
		File dirFrom = new File("D:\\exam"); // 指定源目录
		File dirTo = new File("D:\\exam1"); // 指定目标目录

		try {
			System.out.println("开始复制");
			copyFiles(dirFrom, dirTo); // 调用复制文件方法
			System.out.println("复制完成");
		} catch (IOException e) {
			e.printStackTrace();
		}

	}

	private static void copyFiles(File dirFrom, File dirTo) throws IOException {
		if (!dirTo.exists()) {
			dirTo.mkdir(); // 如目标目录不存在则创建目录
		}

		// 定义IO操作用到的变量
		BufferedInputStream in = null;
		BufferedOutputStream out = null;
		byte[] b = new byte[1024];
		int len = 0;

		File[] files = dirFrom.listFiles(); // 列出源目录下的文件列表
		for (File fileFrom : files) { // 遍历源目录下的文件
			if (fileFrom.isDirectory()) {
				copyFiles(fileFrom, dirTo); // 如果是目录则对其进行遍历复制操作
			} else if (fileFrom.getName().endsWith(".java")) { // 判断扩展名为.java
				// 新文件父路径为指定目标目录，文件名与源文件相同，扩展名改为.txt
				File fileTo = new File(dirTo, fileFrom.getName()
								.replaceAll("\\.java\\b", ".txt"));
				fileTo.createNewFile(); // 创建新文件

				// 用IO操作复制文件
				in = new BufferedInputStream(new FileInputStream(fileFrom));
				out = new BufferedOutputStream(new FileOutputStream(fileTo));
				while ((len = in.read(b)) != -1) {
					out.write(b, 0, len);
				}
				in.close();
				out.close();
			}
		}
	}
}
