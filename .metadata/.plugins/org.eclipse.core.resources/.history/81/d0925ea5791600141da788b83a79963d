package com.itheima;

import java.io.*;
import java.net.*;
import java.util.Scanner;

/**
 * 第10题：使用TCP协议完成一个客户端一个服务器。客户端从键盘输入读取一个字符串，发送到服务器。
 * 服务器接收客户端发送的字符串，反转之后发回客户端。客户端接收并打印。
 * 
 * @author one
 * 
 */
public class Test10 {
	public static void main(String[] args) {
		
		new Thread(new Server()).start();
		new Thread(new Client()).start();
	}
}

class Client implements Runnable {
	public void run() {
		Socket socket = null;
		Scanner scanner = new Scanner(System.in);
		BufferedWriter out = null;
		BufferedReader in = null;
		try {
			socket = new Socket("localhost", 10086);
			out = new BufferedWriter(new OutputStreamWriter(
					socket.getOutputStream()));
			in = new BufferedReader(new InputStreamReader(
					socket.getInputStream()));
			String string = scanner.nextLine();
			out.write(string);
			
			String re = in.readLine();
			System.out.println(re);
			
			

		} catch (IOException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		} finally {
			scanner.close();
			try {
				socket.close();
			} catch (IOException e) {
				// TODO Auto-generated catch block
				e.printStackTrace();
			}
			try {
				if (out != null) {
					out.close();
				}
			} catch (IOException e) {
				// TODO Auto-generated catch block
				e.printStackTrace();
			}
		}

	}
}

class Server implements Runnable {
	public void run() {
		ServerSocket server = null;
		BufferedReader in = null;
		BufferedWriter out = null;
		try {
			server = new ServerSocket(10086);
			Socket socket = server.accept();
			in = new BufferedReader(new InputStreamReader(socket.getInputStream()));
			out = new BufferedWriter(new OutputStreamWriter(socket.getOutputStream()));
			
			String string = in.readLine();
			String reString = new StringBuilder(string).reverse().toString();
			out.write(reString);
			
		} catch (IOException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}finally{
			try {
				if (server!=null) {
					server.close();
				}
			} catch (IOException e) {
				// TODO Auto-generated catch block
				e.printStackTrace();
			}
			try {
				if (in!=null) {
					in.close();
				}
			} catch (IOException e) {
				// TODO Auto-generated catch block
				e.printStackTrace();
			}
			try {
				if (out!=null) {
					out.close();
				}
			} catch (IOException e) {
				// TODO Auto-generated catch block
				e.printStackTrace();
			}
		}
	}
}